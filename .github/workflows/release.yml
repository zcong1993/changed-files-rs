name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  # Publish starship to Crates.io
  cargo_publish:
    name: Publish Cargo Package
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build | Publish
        run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}

  build:
    name: Build release binaries
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - x86_64-apple-darwin
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: changed-files-rs-x86_64-unknown-linux-gnu.tar.gz
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: changed-files-rs-x86_64-unknown-linux-musl.tar.gz
          - target: x86_64-apple-darwin
            os: macOS-latest
            name: changed-files-rs-x86_64-apple-darwin.tar.gz
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      # Cache files between builds
      - name: Setup | Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: ${{ matrix.target }}
          override: true
      - name: Build | Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Post Setup | Prepare artifacts [-nix]
        run: |
          cd target/${{ matrix.target }}/release
          strip changed-files-rs
          tar czvf ../../../${{ matrix.name }} changed-files-rs
          cd -
      - name: Post Setup | Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}
  # Create GitHub release with Rust build targets
  github_release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup | Artifacts
        uses: actions/download-artifact@v2

      - name: Setup | Checksums
        run: for file in changed-files-rs-*/changed-files-rs-*; do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done

      - name: Build | Publish
        id: gh-release
        uses: softprops/action-gh-release@v1
        with:
          files: changed-files-rs-*/changed-files-rs-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: transform
        id: transform
        run: |
          origin=${{ steps.gh-release.outputs.url }}
          base=${origin/tag/download}
          echo "::set-output name=url::$base/changed-files-rs-x86_64-apple-darwin.tar.gz"
      - name: Update brew formula
        uses: mislav/bump-homebrew-formula-action@v1
        with:
          formula-name: changed-files-rs
          homebrew-tap: zcong1993/homebrew-tap
          download-url: ${{ steps.transform.outputs.url }}
        env:
          COMMITTER_TOKEN: ${{ secrets.PAT }}
